{"version":3,"sources":["Components/WeatherCard.js","Components/AddLocation.js","Containers/WeatherCardList.js","Components/WeatherDetailed.js","Components/AddLocationBox.js","Containers/App.js","serviceWorker.js","index.js"],"names":["WeatherCard","id","console","log","this","props","changeDetailedLocation","element","name","region","country","temp","bg","className","style","backgroundImage","onClick","e","changeHighlightedLocation","Component","AddLocation","showAddLocation","target","WeatherCardList","location","map","place","i","key","current","temperature","WeatherDetailed","precip","humidity","wind","AddLocationBox","state","searchBox","value","setState","closeBox","addLocationName","type","onChange","updateSearchBox","App","bind","locations","detailedLocation","addLocation","fetch","json","locationResp","locationName","city","link","resp","nWeather","newLocations","addBg","bgURL","push","Object","assign","length","data","image_results","sourceUrl","keys","constructor","Array","addLocationTest","wind_speed","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9f9d9044.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./WeatherCard.css\"\r\n\r\nclass WeatherCard extends Component {\r\n    changeHighlightedLocation(id){\r\n        console.log('Id: ', id);\r\n        this.props.changeDetailedLocation(id);\r\n    }\r\n\r\n    render(){\r\n        const {element, name, region, country, temp, bg} = this.props;\r\n        return(\r\n            <div className=\"weather-card\" style={{ backgroundImage: `url(${bg})`}}  id={element}  onClick={(e) => this.changeHighlightedLocation(this.props.element)}>\r\n                <div className=\"location\">\r\n                    <span className=\"city\"> {name} </span>\r\n                    <span className=\"region\"> {region}, {country} </span>\r\n                </div>\r\n                <div className=\"temp\">\r\n                    {temp}&#176; \r\n                </div>\r\n            </div> \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default WeatherCard;","import React, { Component } from 'react';\r\nimport './AddLocation.css';\r\n\r\nclass AddLocation extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"add-location-btn\" id=\"1\" onClick={(e) => this.props.showAddLocation(e.target.id)}>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddLocation;","import React, {Component} from 'react';\r\nimport './WeatherCardList.css';\r\nimport WeatherCard from '../Components/WeatherCard';\r\nimport AddLocation from '../Components/AddLocation.js';\r\n\r\nclass WeatherCardList extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"weather-card-list\">\r\n                {\r\n                    this.props.location.map( (place, i) =>{\r\n                        return (\r\n                            <WeatherCard \r\n                                key={i}\r\n                                element={place.id} \r\n                                name={place.location.name}\r\n                                region={place.location.region}\r\n                                country={place.location.country}\r\n                                temp={place.current.temperature}\r\n                                changeDetailedLocation={this.props.changeDetailedLocation}\r\n                                bg={place.bg}/>\r\n                        )\r\n                    } )\r\n                }\r\n\r\n                <AddLocation showAddLocation={this.props.showAddLocation}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherCardList;\r\n","import React from \"react\";\r\nimport './WeatherDetailed.css';\r\n\r\nconst WeatherDetailed = (props) => (\r\n    <div className=\"weather-detailed\" style={{ backgroundImage: `url(${props.bg})`}}>\r\n        <div className=\"temp-location\">\r\n            <span className=\"location\"> {props.location} </span>\r\n            <span className=\"temp\"> {props.temp}&#176; </span>\r\n        </div>\r\n        <div className=\"details\">\r\n            <span>   Precipitatii: {props.precip}% </span>  <br/>\r\n            <span>   Umiditate: {props.humidity}% </span>  <br/>\r\n            <span>   Vant: {props.wind}km/h </span>  \r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default WeatherDetailed;","import React, {Component} from 'react';\r\nimport './AddLocationBox.css';\r\n\r\nclass AddLocationBox extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchBox: \"\"\r\n        }\r\n    }\r\n\r\n    updateSearchBox(value){\r\n        this.setState({searchBox: value});\r\n    }\r\n\r\n    addLocationName(){\r\n        this.props.closeBox(0);\r\n\r\n        console.log('AddLocation', this.state.searchBox);\r\n        let location = this.state.searchBox;\r\n        this.props.addLocationName(location);\r\n    }\r\n\r\n    render(){\r\n        return  (this.props.showAddLocation) ?\r\n            (\r\n            <div className=\"search-box\">\r\n                <div className=\"exit\" onClick={(e) => this.props.closeBox(0)}> </div>\r\n                <input className=\"text-input\" type=\"text\" onChange={(e) => this.updateSearchBox(e.target.value)}/>\r\n                <div className=\"button\" onClick={() => this.addLocationName()}>\r\n                    Search\r\n                </div>\r\n            </div>\r\n            ) : (\"\");\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default AddLocationBox;","import React, { Component } from 'react';\nimport './App.css';\nimport WeatherCardList from './WeatherCardList.js';\nimport WeatherDetailed from '../Components/WeatherDetailed';\nimport AddLocationBox from '../Components/AddLocationBox';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.changeDetailedLocation = this.changeDetailedLocation.bind(this);\n    this.addLocationName = this.addLocationName.bind(this);\n    this.showAddLocation = this.showAddLocation.bind(this);\n    this.state = {\n      locations: [],\n      detailedLocation: 0,\n      showAddLocation: 0,\n    }\n  }\n\n  changeDetailedLocation(id){\n    this.setState({detailedLocation: id});\n  }\n   \n  componentDidMount() {\n    this.addLocation();\n\n    //this.addLocationName(\"New York\");\n    //this.addBg(\"Tulcea\");\n  }\n\n\n  async addLocation(){\n    const location = await fetch('https://cors-anywhere.herokuapp.com/http://api.ipstack.com/95.77.243.31?access_key=0b73a0bff2d0819d2917a668b59c2772');\n    const locationResp = await location.json();\n    const locationName = locationResp.city;\n\n    const link = `https://cors-anywhere.herokuapp.com/http://api.weatherstack.com/current?access_key=ff841349aa894a1e73d516cc496a2b25&query=${locationName}`;\n\n    const resp = await fetch(link);\n    const nWeather = await resp.json();\n\n\n    let newLocations = this.state.locations;\n    let bgURL = await this.addBg(nWeather.location.region);\n    newLocations.push(Object.assign(nWeather, {id: this.state.locations.length, bg: bgURL}));\n    \n    this.setState({locations: newLocations});\n  }\n\n\n  //, bg: this.addBg(nWeather.location.name)\n\n  async addLocationName(name){\n   // console.log('AddLocationName Function');\n    const link = `https://cors-anywhere.herokuapp.com/http://api.weatherstack.com/current?access_key=ff841349aa894a1e73d516cc496a2b25&query=${name}`;\n\n    const resp = await fetch(link);\n    const nWeather = await resp.json();\n\n\n    let newLocations = this.state.locations;\n    let bgURL = await this.addBg(nWeather.location.region);\n    newLocations.push(Object.assign(nWeather, {id: this.state.locations.length, bg: bgURL}));\n    \n    this.setState({locations: newLocations});\n  }\n\n  //, bg: bgURL\n\n  async addBg(name){\n    try {\n        const link = `https://app.zenserp.com/api/v2/search?apikey=49537c30-bc2f-11ea-bde9-c778342b1c35&q=${name}&tbm=isch`;\n        const resp = await fetch(link);\n        const data = await resp.json();\n\n        console.log(data.image_results[0].sourceUrl);\n        return data.image_results[0].sourceUrl;\n    } catch (error){\n        return \"https://github.com/GeorgeNicola/Images/blob/master/city-bg.jpg?raw=true\";\n    }\n  }\n\n  showAddLocation(value = 0){\n    //console.log(this.state.showAddLocation);\n    this.setState({showAddLocation: value});\n  }\n\n\n  render() { \n   console.log('In render: ', this.state.locations);\n\n    return ( Object.keys(this.state.locations).length === 0 && this.state.locations.constructor === Array ) ? \n          <div className=\"loader\"></div> :\n        (\n          <div className=\"wrapp-all\">\n            <AddLocationBox addLocationName={this.addLocationName} showAddLocation={this.state.showAddLocation} closeBox={this.showAddLocation}/>\n            <div className=\"app\"> \n                <WeatherCardList location={this.state.locations} \n                                changeDetailedLocation={this.changeDetailedLocation} \n                                addLocation={this.addLocationTest}\n                                showAddLocation={this.showAddLocation}/>  \n\n                <WeatherDetailed \n                    location={this.state.locations[this.state.detailedLocation].location.name}\n                    temp={this.state.locations[this.state.detailedLocation].current.temperature}\n                    bg={this.state.locations[this.state.detailedLocation].bg}\n                    precip={this.state.locations[this.state.detailedLocation].current.precip}\n                    humidity={this.state.locations[this.state.detailedLocation].current.humidity}\n                    wind={this.state.locations[this.state.detailedLocation].current.wind_speed}\n                    />\n            </div>\n          </div>\n        )\n\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <App/>\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}